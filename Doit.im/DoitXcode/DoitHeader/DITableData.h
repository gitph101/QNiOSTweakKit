//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class Box, Contact, Context, Filter, Goal, NSArray, NSMutableArray, NSMutableDictionary, NSString, Project;

@interface DITableData : NSObject
{
    NSMutableArray *_items;
    NSMutableDictionary *_sectionInfoDict;
    _Bool _isGrouped;
    _Bool _everContainsTask;
    _Bool _ignoreCompletedGroup;
    _Bool _ignoreArchivedGroup;
    _Bool _forceGroupByNone;
    int _ownerType;
    Box *_currBox;
    Filter *_currFilter;
    Context *_currContext;
    Project *_currProject;
    Contact *_currContact;
    Goal *_currGoal;
    NSArray *_filters;
    NSMutableArray *_filteredItems;
    long long _groupType;
    NSMutableArray *_groupKeys;
    NSMutableDictionary *_groupedItems;
    NSMutableDictionary *_groupInfoDict;
    NSMutableArray *_sortDescriptors;
    NSString *_searchKey;
}

@property(nonatomic) _Bool forceGroupByNone; // @synthesize forceGroupByNone=_forceGroupByNone;
@property(retain, nonatomic) NSString *searchKey; // @synthesize searchKey=_searchKey;
@property(nonatomic) _Bool ignoreArchivedGroup; // @synthesize ignoreArchivedGroup=_ignoreArchivedGroup;
@property(nonatomic) _Bool ignoreCompletedGroup; // @synthesize ignoreCompletedGroup=_ignoreCompletedGroup;
@property(readonly, nonatomic) NSMutableArray *sortDescriptors; // @synthesize sortDescriptors=_sortDescriptors;
@property(retain, nonatomic) NSMutableDictionary *groupInfoDict; // @synthesize groupInfoDict=_groupInfoDict;
@property(retain, nonatomic) NSMutableDictionary *groupedItems; // @synthesize groupedItems=_groupedItems;
@property(retain, nonatomic) NSMutableArray *groupKeys; // @synthesize groupKeys=_groupKeys;
@property(nonatomic) long long groupType; // @synthesize groupType=_groupType;
@property(retain, nonatomic) NSMutableArray *filteredItems; // @synthesize filteredItems=_filteredItems;
@property(retain, nonatomic) NSArray *filters; // @synthesize filters=_filters;
@property(nonatomic) _Bool everContainsTask; // @synthesize everContainsTask=_everContainsTask;
@property(nonatomic) _Bool isGrouped; // @synthesize isGrouped=_isGrouped;
@property(retain, nonatomic) Goal *currGoal; // @synthesize currGoal=_currGoal;
@property(retain, nonatomic) Contact *currContact; // @synthesize currContact=_currContact;
@property(retain, nonatomic) Project *currProject; // @synthesize currProject=_currProject;
@property(retain, nonatomic) Context *currContext; // @synthesize currContext=_currContext;
@property(retain, nonatomic) Filter *currFilter; // @synthesize currFilter=_currFilter;
@property(retain, nonatomic) Box *currBox; // @synthesize currBox=_currBox;
@property(nonatomic) int ownerType; // @synthesize ownerType=_ownerType;
- (void).cxx_destruct;
- (_Bool)isSectionFolded:(long long)arg1;
- (id)sectionInfoForGroup:(id)arg1;
- (void)sortGroups;
- (void)sortArchiveTasks:(id)arg1;
- (void)sortCompletedTasks:(id)arg1;
- (id)insertItemForGlobalSearch:(id)arg1;
- (id)insertItem:(id)arg1;
- (void)groupByCompleteTime;
- (id)groupNameForItemGroupByCompleteTime:(id)arg1;
- (void)groupByEndAt;
- (id)groupNameForItemGroupByEndAt:(id)arg1;
- (void)groupByStartAt;
- (id)groupNameForItemGroupByStartAt:(id)arg1;
- (void)groupByPriority;
- (id)priorityGroupTitle:(long long)arg1;
- (id)groupNameForItemGroupByPriority:(id)arg1;
- (void)groupByContext;
- (id)groupNameForItemGroupByContext:(id)arg1;
- (void)groupByBox;
- (id)groupNameForItemGroupByBox:(id)arg1;
- (id)groupNameForTaskGroupByBox:(id)arg1;
- (id)groupNameForProjectGroupByBox:(id)arg1;
- (void)groupProjectsByProjectStatus;
- (id)groupNameForItemGroupByProjectStatus:(id)arg1;
- (void)groupByProject;
- (id)groupNameForItemGroupByProject:(id)arg1;
- (void)groupByContacts;
- (id)groupNameForItemGroupByContacts:(id)arg1;
- (void)groupByNone;
- (void)groupTasks;
- (id)groupbyOptions;
- (void)changeGroupMethodTo:(id)arg1;
- (void)searchTasks:(id)arg1;
- (void)filterTasks:(id)arg1 forReload:(_Bool)arg2;
- (void)filterTasks:(id)arg1;
- (_Bool)isDoitNowTask:(id)arg1;
- (void)resetSortDescriptors;
- (id)defaultTaskListSortDescriptors;
- (void)loadNextTasksForPlan;
- (void)loadTodayTasksForPlan;
- (void)loadGoals;
- (void)loadContexts;
- (void)loadProjects;
- (void)loadTasksInContact:(id)arg1;
- (void)loadItemsInGoal:(id)arg1;
- (void)loadTasksInProject:(id)arg1;
- (void)loadItemsInContext:(id)arg1;
- (void)loadItemsInFilter:(id)arg1;
- (void)loadTasksInBox:(id)arg1 scheduledAsAfter:(id)arg2;
- (void)loadItemsBySearchKey:(id)arg1;
- (void)loadTasksForStatusItem;
- (id)groupTypeToDBValue:(long long)arg1;
- (id)groupTypeToMethodName:(long long)arg1;
- (long long)methodNameToGroupType:(id)arg1;
- (long long)dbValueToGroupbyType:(id)arg1;
- (_Bool)moveItem:(id)arg1 toIndex:(long long)arg2;
- (_Bool)moveItem:(id)arg1 inItemList:(id)arg2 toIndex:(long long)arg3;
- (_Bool)canMoveItem:(id)arg1 toIndex:(long long)arg2;
- (_Bool)saveItem:(id)arg1;
- (id)itemsInGroup:(id)arg1;
- (void)sortItemInGroup:(id)arg1 withDescriptors:(id)arg2;
- (id)removeItem:(id)arg1;
- (void)removeItemAtIndex:(id)arg1;
- (id)itemAtIndexPath:(id)arg1;
- (id)nextItem:(id)arg1;
- (id)prevItem:(id)arg1;
- (id)groupKeyAtIndex:(long long)arg1;
- (void)setOnlyOneFlag:(_Bool)arg1 inGroup:(id)arg2;
- (_Bool)showOnlyOneInGroup:(id)arg1;
- (void)setShowOnlyOne:(_Bool)arg1;
- (long long)numberOfItemInGroup:(long long)arg1;
- (long long)numberOfGroups;
- (long long)numberOfItems;
- (long long)indexOfGroup:(id)arg1;
- (id)indexPathOfItem:(id)arg1;
- (void)addItems:(id)arg1 inGroup:(id)arg2;
- (void)addItem:(id)arg1 intoGroup:(id)arg2;
- (_Bool)insertGroup:(id)arg1 atIndex:(long long)arg2;
- (void)removeGroup:(id)arg1;
- (void)setGroupsTo:(id)arg1;
- (void)addGroup:(id)arg1;
- (_Bool)isGroupExist:(id)arg1;
- (void)initSectionStatusDict;
- (_Bool)isGroupOpen:(id)arg1;
- (_Bool)_isSectionOpen:(long long)arg1;
- (_Bool)isItemCompatibleWithGlobalSearchKey:(id)arg1 key:(id)arg2;
- (_Bool)isItemCompatible:(id)arg1;
- (_Bool)isItem:(id)arg1 compatibleWithSearchKey:(id)arg2;
- (_Bool)isCompatibleWithFiltered:(id)arg1;
- (_Bool)isItem:(id)arg1 compatibleWithContext:(id)arg2;
- (_Bool)isItem:(id)arg1 compatibleWithBox:(id)arg2;
- (_Bool)isItem:(id)arg1 compatibleWithGoal:(id)arg2;
- (_Bool)isItem:(id)arg1 compatibleWithProject:(id)arg2;
- (void)clearDataWithoutFilters;
- (void)clearData;
- (long long)countOfUncompletedFilterItems;
- (long long)countOfFilteredItems;
- (long long)countOfItems;
@property(retain, nonatomic) NSMutableArray *items;
- (void)sortFilteredItems;
- (void)buildSortKeysForFilteredItems;
- (void)buildSortKeysForItem:(id)arg1;
- (void)buildSortKeysForItemInDailyPlan:(id)arg1;
- (void)buildSortKeysForItemInSingleGoal:(id)arg1;
- (void)buildSortKeysForItemInSingleContext:(id)arg1;
- (void)buildSortKeysForItemInSingleProject:(id)arg1;
- (void)buildSortKeysForItemInTomorrow:(id)arg1;
- (void)buildSortKeysForItemInToday:(id)arg1;
- (void)reformData;
- (void)rebuildData;
@property(readonly, nonatomic) int ownerBoxType;
- (id)init;

@end

