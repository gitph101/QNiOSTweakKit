//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSDate.h"

@interface NSDate (Helper)
+ (id)lastDayOfCurrentMonth;
+ (id)firstDayOfCurrentMonth;
+ (id)dateInitWithDate:(id)arg1 hour:(long long)arg2 minute:(long long)arg3;
+ (id)dateInitWithYear:(long long)arg1 month:(long long)arg2 day:(long long)arg3 hour:(long long)arg4 minute:(long long)arg5;
+ (id)dateInitWithYear:(long long)arg1 month:(long long)arg2 day:(long long)arg3;
+ (id)dateWithHour:(long long)arg1 minute:(long long)arg2 daySinceToday:(long long)arg3;
+ (id)tomorrowWithHour:(long long)arg1 minute:(long long)arg2;
+ (id)todayWithHour:(long long)arg1 minute:(long long)arg2;
+ (id)getDateAfterDate:(id)arg1 hours:(long long)arg2;
+ (id)now;
+ (_Bool)equalEvenNil:(id)arg1 toAnother:(id)arg2;
+ (id)timeIntervalToFmtString:(double)arg1;
+ (_Bool)isEqualEvenNil:(id)arg1 other:(id)arg2;
+ (_Bool)isAfter:(id)arg1 other:(id)arg2;
+ (_Bool)isBefore:(id)arg1 other:(id)arg2;
+ (long long)getMaxDayOf1BasedMonth:(id)arg1;
+ (long long)getMaxWeekOrdinalOfMonth:(id)arg1;
+ (id)dateWithMilliSecondsTimeIntervalSince1970:(long long)arg1;
+ (id)nextMonday;
+ (_Bool)isNil:(id)arg1;
+ (id)afterTomorrow;
+ (id)tomorrow;
+ (id)tomorrowDate;
+ (id)daySinceToday:(long long)arg1;
+ (id)today;
+ (id)dateFromString:(id)arg1 format:(id)arg2;
+ (id)dateFromDateInformation:(struct SODateInformation)arg1;
+ (id)dateFromDateInformation:(struct SODateInformation)arg1 timeZone:(id)arg2;
+ (id)dateInformationDescriptionWithInformation:(struct SODateInformation)arg1;
- (id)dateAtHour:(unsigned long long)arg1 minute:(unsigned long long)arg2 second:(unsigned long long)arg3;
- (id)components;
- (id)previousMonth;
- (id)nextMonth;
- (id)firstDayOfMonth;
- (long long)weekdayWithMondayFirst;
- (long long)weekday;
- (id)firstOfNextMonthForDate;
- (id)firstOfCurrentMonthForDate;
- (id)daylessDate;
- (id)timelessDate;
- (id)dateByAddingDays:(long long)arg1;
- (long long)differenceInMonthsTo:(id)arg1;
- (long long)differenceInDaysTo:(id)arg1;
- (long long)differenceInMniutesTo:(id)arg1;
- (long long)date;
- (long long)getWeekdayOrdinalOfMonth;
- (long long)getWeekOfMonth;
- (long long)getWeekdayZeroBased;
- (_Bool)isAfterThisMonth;
- (_Bool)isThisMonthAfterNextWeek;
- (_Bool)isThisMonth;
- (_Bool)isInTwoWeeks;
- (_Bool)isInOneWeek;
- (_Bool)isNextWeek:(int)arg1;
- (_Bool)isThisWeek:(int)arg1;
- (_Bool)isThisYear;
- (_Bool)isAfterTomorrow;
- (_Bool)isTomorrow;
- (_Bool)isAfterToday;
- (_Bool)isBeforeToday;
- (_Bool)isTodayOrBefore;
- (_Bool)isToday;
- (_Bool)isSameDay:(id)arg1;
- (_Bool)isBeforeHour14;
- (_Bool)isNight;
- (_Bool)isAfternoon;
- (_Bool)isMorning;
- (id)addIntervalHour:(long long)arg1;
- (long long)week;
- (long long)dayOfWeek;
- (long long)milliSecondsTimeIntervalSince1970;
- (id)ymdhm;
- (id)ymdh;
- (id)ymd;
- (long long)minute;
- (long long)hour;
- (long long)day;
- (long long)month;
- (long long)monthZeroBased;
- (long long)year;
- (long long)dayOfMonth;
- (long long)compareHM:(id)arg1;
- (long long)compareYMD:(id)arg1;
- (_Bool)isWeekends;
- (id)nextIntegralDayAndHour;
- (id)nextTwoIntegralHour;
- (id)addSomeMinites:(long long)arg1;
- (id)nextIntegralHour;
- (id)stringWithFormat:(id)arg1;
- (struct SODateInformation)dateInformation;
- (struct SODateInformation)dateInformationWithTimeZone:(id)arg1;
@end

